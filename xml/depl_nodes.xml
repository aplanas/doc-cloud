<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.depl.ostack">
 <title>Deploying the &ostack; Services</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer>fs</dm:maintainer>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>no</dm:translation>
    <dm:languages/>
  </dm:docmanager>
 </info>
 <para>
  After the nodes are installed and configured you can start deploying the
  &ostack; components to finalize the installation. The components need to be
  deployed in a given order, because they depend on one another. The
  <guimenu>Pacemaker</guimenu> component for an &hasetup; is the only
  exception from this rule&mdash;it can be set up at any time. However,
  when deploying &productname; from scratch, it is recommended to deploy
  the <guimenu>Pacemaker</guimenu> proposal(s) first. Deployment for all
  components is done from the &crow; Web interface through recipes,
  so-called <quote>&barcl;s</quote>.
 </para>
 <para>
  The components controlling the cloud (including storage management and
  control components) need to be installed on the &contrnode;(s) (refer to
  <xref linkend="sec.depl.arch.components.control"/> for more information).
  However, you may <emphasis>not</emphasis> use your &contrnode;(s) as a
  compute node or storage host for &o_objstore; or &ceph;. Here is a
  list with components that may <emphasis>not</emphasis> be installed on the
  &contrnode;(s): <guimenu>swift-storage</guimenu>, all &ceph;
  components, <guimenu>nova-compute-*</guimenu>. These components need to be
  installed on dedicated nodes.
 </para>
 <para>
  When deploying an &hasetup;, the controller nodes are replaced by one or
  more controller clusters consisting of at least two nodes (three are
  recommended). Setting up three separate clusters&mdash;for data,
  services, and networking&mdash;is recommended. See
  <xref linkend="sec.depl.req.ha"/> for more information on requirements and
  recommendations for an &hasetup;.
 </para>
 <para>
  The &ostack; components need to be deployed in the following order. For
  general instructions on how to edit and deploy &barcl;, refer to
  <xref linkend="sec.depl.ostack.barclamps"/>. Deploying Pacemaker (only
  needed for an &hasetup;), &o_objstore; and &ceph; is optional;
  all other components must be deployed.
 </para>
 <orderedlist spacing="normal">
  <listitem>
<!-- Pacemaker -->
   <para>
    <xref linkend="sec.depl.ostack.pacemaker" xrefstyle="select:title
    nopage"/>
   </para>
  </listitem>
  <listitem>
<!-- Database -->
   <para>
    <xref linkend="sec.depl.ostack.db" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
  <listitem>
<!-- RabbitMQ -->
   <para>
    <xref linkend="sec.depl.ostack.rabbit" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
  <listitem>
<!-- Keystone -->
   <para>
    <xref linkend="sec.depl.ostack.keystone" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
  <listitem>
<!-- Ceph -->
   <para>
    <xref linkend="sec.depl.ostack.ceph" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
  <listitem>
<!-- Swift -->
   <para>
    <xref linkend="sec.depl.ostack.swift" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
  <listitem>
<!-- Glance -->
   <para>
    <xref linkend="sec.depl.ostack.glance" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Cinder -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.cinder" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Neutrum -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.quantum" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Nova -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.nova" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Horizon -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.dash" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Heat -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.heat" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Ceilometer -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.ceilometer" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Manila -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.manila" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Trove -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.trove" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
<!-- Tempest -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.tempest" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
  <!-- Magnum -->
  <listitem>
   <para>
    <xref linkend="sec.depl.ostack.magnum" xrefstyle="select:title nopage"/>
   </para>
  </listitem>
 </orderedlist>

 <xi:include href="depl_pacemaker_i.xml"/>
 <xi:include href="depl_db_i.xml"/>
 <xi:include href="depl_rabbit_i.xml"/>
 <xi:include href="depl_keystone_i.xml"/>
 <xi:include href="depl_ceph_i.xml"/>
 <xi:include href="depl_swift_i.xml"/>
 <xi:include href="depl_glance_i.xml"/>
 <xi:include href="depl_cinder_i.xml"/>
 <xi:include href="depl_quantum_i.xml"/>
 <xi:include href="depl_nova_i.xml"/>
 <xi:include href="depl_dash_i.xml"/>
 <xi:include href="depl_heat_i.xml"/>
 <xi:include href="depl_ceilometer_i.xml"/>
 <xi:include href="depl_manila_i.xml"/>
 <xi:include href="depl_trove_i.xml"/>

 <sect1 xml:id="sec.depl.ostack.tempest">
  <title>Deploying &o_testsuite; (Optional)</title>

  <para>
   &o_testsuite; is an integration test suite for &cloud; written in
   Python. It contains multiple integration tests for validating your &cloud;
   deployment. For more information about &o_testsuite; refer to the &ostack;
   documentation at <link
   xlink:href="http://docs.openstack.org/developer/tempest/"/>.
  </para>

  <important>
   <title>Technology Preview</title>
   <para>
    &o_testsuite; is only included as a technology preview and not supported.
   </para>
   <para>
    &o_testsuite; may be used for testing whether the intended setup will run
    without problems. It should not be used in a production environment.
   </para>
  </important>

  <para>
   &o_testsuite; should be deployed on a &contrnode;.
  </para>

  <para>
   The following attributes can be configured for &o_testsuite;:
  </para>

  <variablelist>
   <varlistentry>
    <term><guimenu>Choose User name / Password</guimenu>
    </term>
    <listitem>
     <para>
      Credentials for a regular user. If the user does not exist, it will be
      created.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Choose Tenant</guimenu>
    </term>
    <listitem>
     <para>
      Tenant to be used by &o_testsuite;. If it does not exist, it will be
      created. It is safe to stick with the default value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Choose Tempest Admin User name/Password</guimenu>
    </term>
    <listitem>
     <para>
      Credentials for an admin user. If the user does not exist, it will be
      created.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure>
   <title>The &o_testsuite; &Barcl;</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="depl_barclamp_tempest.png" width="100%" format="png"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="depl_barclamp_tempest.png" width="75%" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>


  <tip>
   <title>Running Tests</title>
   <para>
    To run tests with &o_testsuite;, log in to the &contrnode; on which
    &o_testsuite; was deployed. Change into the directory
    <filename>/var/lib/openstack-tempest-test</filename>. To get an overview
    of available commands, run:
   </para>
   <screen>./run_tempest.sh --help</screen>
   <para>
    To serially invoke a subset of all tests (<quote>the gating
    smoketests</quote>) to help validate the working functionality of your
    local cloud instance, run the following command. It will save the output
    to a log file
    <filename>tempest_<replaceable>CURRENT_DATE</replaceable>.log</filename>.
   </para>
   <screen>./run_tempest.sh --no-virtual-env -serial --smoke 2>&amp;1 \
| tee "tempest_$(date +%Y-%m-%d_%H%M%S).log"</screen>
  </tip>

  <sect2 xml:id="sec.depl.ostack.tempest.ha">
   <title>&haSetup; for &o_testsuite;</title>
   <para>
    &o_testsuite; cannot be made highly available.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec.depl.ostack.magnum">
  <title>Deploying &o_container; (Optional)</title>
  <para>
   &o_container; is an &ostack; project which offers container orchestration engines for
   deploying and managing containers as first class resources in &ostack;.
  </para>
  <para>
   For more information about &o_container;, see the &ostack; documentation at
   <link xlink:href="http://docs.openstack.org/developer/magnum/"/>.
  </para>
  <para>
   For information on how to deploy a Kubernetes cluster (either from command
   line or from the &o_dash; &dash;), see the &cloudsuppl;. It is available from
   <link xlink:href="https://www.suse.com/documentation/cloud"></link>.
  </para>
  <para>
   The following <guimenu>Attributes</guimenu> can be configured for &o_container;:
  </para>
  <variablelist>
   <varlistentry>
    <term><guimenu>Logging</guimenu>: <guimenu>Verbose</guimenu></term>
    <listitem>
     <para>
      Increases the amount of information that is written to the log files when
      set to <guimenu>true</guimenu>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Logging</guimenu>: <guimenu>Debug</guimenu></term>
    <listitem>
     <para>
      Shows debugging output in the log files when set to <guimenu>true</guimenu>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Trustee Domain</guimenu>: <guimenu>Domain Name</guimenu></term>
    <listitem>
     <para>
      Domain name to use for creating trustee for bays.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Certificate Manager</guimenu>: <guimenu>Plugin</guimenu></term>
    <listitem>
     <para>
      To store certificates, either use the <guimenu>Barbican</guimenu> &ostack;
      service, a local directory (<guimenu>Local</guimenu>), or the <guimenu>Magnum
      Database (x590keypair)</guimenu>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <figure>
   <title>The &o_container; &Barcl;</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="depl_barclamp_magnum_attributes.png" width="100%" format="png"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="depl_barclamp_magnum_attributes.png" width="75%" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>The &o_container; &barcl; consists of the following roles:
   <guimenu>magnum-server</guimenu>. It can either be deployed on a &contrnode;
   or on a cluster&mdash;see <xref linkend="sec.depl.ostack.magnum.ha"/>.
   When deploying the role onto a &contrnode;, additional RAM is required for the
   &o_container; server. It is recommended to only deploy the role to a &contrnode;
   that has 16 GB RAM.
  </para>
  <sect2 xml:id="sec.depl.ostack.magnum.ha">
   <title>&haSetup; for &o_container;</title>
   <para>
    Making &o_container; highly available requires no special configuration. It
    is sufficient to deploy it on a cluster.
   </para>
  </sect2>
  </sect1>

  <sect1 xml:id="sec.depl.ostack.barbican">
    <title>Deploying &secret_store; (Optional)</title>
    <para>&secret_store; is a component designed for storing secrets in a secure and standardized manner protected by &o_ident; authentication. Secrets include SSL certificates and passwords used by various &ostack; components.</para>
    <para>&secret_store; settings can be configured in <literal>Raw</literal> mode only. To do this, open the &secret_store; &barcl; <guimenu>Attribute
     </guimenu>configuration in <guimenu>Raw</guimenu> mode.</para>

      <figure>
        <title>The &secret_store; &Barcl;: Raw Mode</title>
        <mediaobject>
          <imageobject role="fo">
       <imagedata fileref="depl_barclamp_barbican_raw.png" width="100%" format="png"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="depl_barclamp_barbican_raw.png" width="75%" format="png"/>
      </imageobject>
     </mediaobject>
    </figure>

    <para>When configuring &secret_store;, pay particular attention to the following settings:</para>
     <itemizedlist>
       <listitem>
         <para><literal>bind_host</literal> Bind host for the &secret_store; API service</para>
       </listitem>
       <listitem>
         <para><literal>bind_port</literal> Bind port for the &secret_store; API service</para>
       </listitem>
       <listitem>
         <para><literal>processes</literal> Number of API processes to run in Apache</para>
       </listitem>
       <listitem>
         <para><literal>ssl</literal> Enable or disable SSL</para>
       </listitem>
       <listitem>
         <para><literal>threads</literal> Number of API worker threads</para>
       </listitem>
       <listitem>
         <para><literal>debug</literal> Enable or disable debug logging</para>
       </listitem>
       <listitem>
         <para><literal>enable_keystone_listener</literal> Enable or disable the &o_ident; listener services</para>
       </listitem>
       <listitem>
         <para><literal>kek</literal> An encryption key (fixed-length 32-byte Base64-encoded value) for &secret_store;'s <systemitem>simple_crypto</systemitem> plugin. If left unspecified, the key will be generated automatically.</para>

         <note>
           <title>Existing Encryption Key</title>
           <para>If you plan to restore and use the existing &secret_store; database after a full reinstall (including a complete wipe of the Crowbar node), make sure to save the specified encryption key beforehand. You will need to provide it after the full reinstall in order to access the data in the restored &secret_store; database.</para>
         </note>
       </listitem>
     </itemizedlist>
<sect2 xml:id="sec.depl.ostack.barbican.ha">
   <title>&haSetup; for &secret_store;</title>
   <para>
    To make &secret_store; highly available, assign the <guimenu>barbican-controller</guimenu> role to the Controller Cluster.
   </para>
  </sect2>
  </sect1>

  <sect1 xml:id="sec.depl.ostack.sahara">
    <title>Deploying &dataproc;</title>
    <para>
      &dataproc; provides users with simple means to provision data processing frameworks (such as Hadoop, Spark, and Storm) on OpenStack. This is accomplished by specifying configuration parameters such as the framework version, cluster topology, node hardware details, etc.
    </para>
    <variablelist>
      <varlistentry>
      <term>Logging: Verbose</term>
      <listitem>
        <para>
          Set to <systemitem>true</systemitem> to increase the amount of information written to the log files.
        </para>
      </listitem>
      </varlistentry>
    </variablelist>

      <figure>
        <title>The &dataproc; Barclamp</title>
        <mediaobject>
          <imageobject role="fo">
       <imagedata fileref="depl_barclamp_sahara.png" width="100%" format="png"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="depl_barclamp_sahara.png" width="75%" format="png"/>
      </imageobject>
     </mediaobject>
    </figure>

<sect2 xml:id="sec.depl.ostack.sahara.ha">
   <title>&haSetup; for &dataproc;</title>
   <para>
     Making &dataproc; highly available requires no special configuration. It is sufficient to deploy it on a cluster.
   </para>
  </sect2>

  </sect1>

 <sect1 xml:id="sec.depl.ostack.final">
  <title>How to Proceed</title>

  <para>
   With a successful deployment of the &ostack; &dash;, the
   &productname; installation is finished. To be able to test your setup
   by starting an &vmguest; one last step remains to be
   done&mdash;uploading an image to the &o_img; component. Refer to the
   &cloudsuppl;, chapter <citetitle>Manage images</citetitle>
<!--<xref linkend="sec.adm.cli.img"/>-->
   for instructions. Images for &cloud; can be built in SUSE Studio.
   Refer to the &cloudsuppl;, section <citetitle>Building Images with
   &susestudio;</citetitle>.
  </para>

  <para>
   Now you can hand over to the cloud administrator to set up users, roles,
   flavors, etc.&mdash;refer to the &cloudadmin; for details. The
   default credentials for the &ostack; &dash; are user name
   <literal>admin</literal> and password <literal>crowbar</literal>.
  </para>
 </sect1>
</chapter>
